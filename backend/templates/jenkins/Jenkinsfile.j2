pipeline {
    agent any
    
    stages {
        stage('Download Files') {
            steps {
                script {
                    bat 'curl  -o Dockerfile  https://tidy-definitely-sailfish.ngrok-free.app/clients/{{ user_id }}/{{ image_name }}/Dockerfile'
                    {% if deployment_plan in ['aws', 'azure'] %}
                    bat 'curl  -o main.tf  https://tidy-definitely-sailfish.ngrok-free.app/clients/{{ user_id }}/{{ image_name }}/main.tf'
                    {% endif %}
                }
            }
        }

        

        stage('Clone repo') {
            steps {
                git url: '{{ public_repo_url }}', branch: '{{ branch }}'
            }
        }

        
        {% if deployment_plan in ['aws', 'azure'] %}

        stage('Initialize Terraform') {
            steps {
                script {
                    bat 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    bat 'terraform plan -lock=false -out=tfplan '
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    bat 'terraform apply -auto-approve -lock=false tfplan '
                }
            }
        }
        {% endif %}
        stage('Build Docker Image') {
            steps {
                script {
                    bat 'docker build -t idpx/{{ image_name }} .'
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials(
                        [usernamePassword(
                            credentialsId: '{{ dockerhub_cred_Jenkins }}' , 
                            usernameVariable: 'DOCKERHUB_USER', 
                            passwordVariable: 'DOCKERHUB_PASS'
                        )]){
                            bat '''
                            echo %DOCKERHUB_PASS% | docker login -u %DOCKERHUB_USER% --password-stdin
                            docker push idpx/{{ image_name }}:latest
                            '''
                        }
                }
            }
        }
    }


}
